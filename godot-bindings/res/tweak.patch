diff --git b/godot-ffi/src/gen/gdextension_interface.h a/godot-ffi/src/gen/gdextension_interface.h
index 4e4f300..e1cd5fb 100644
--- b/godot-ffi/src/gen/gdextension_interface.h
+++ a/godot-ffi/src/gen/gdextension_interface.h
@@ -155,27 +155,27 @@ typedef enum {
 // - Some types have no destructor (see `extension_api.json`'s `has_destructor` field), for
 //   them it is always safe to skip the constructor for the return value if you are in a hurry ;-)
 
-typedef void *GDExtensionVariantPtr;
-typedef const void *GDExtensionConstVariantPtr;
-typedef void *GDExtensionUninitializedVariantPtr;
-typedef void *GDExtensionStringNamePtr;
-typedef const void *GDExtensionConstStringNamePtr;
-typedef void *GDExtensionUninitializedStringNamePtr;
-typedef void *GDExtensionStringPtr;
-typedef const void *GDExtensionConstStringPtr;
-typedef void *GDExtensionUninitializedStringPtr;
-typedef void *GDExtensionObjectPtr;
-typedef const void *GDExtensionConstObjectPtr;
-typedef void *GDExtensionUninitializedObjectPtr;
-typedef void *GDExtensionTypePtr;
-typedef const void *GDExtensionConstTypePtr;
-typedef void *GDExtensionUninitializedTypePtr;
-typedef const void *GDExtensionMethodBindPtr;
+typedef struct __GdextVariant *GDExtensionVariantPtr;
+typedef const struct __GdextVariant *GDExtensionConstVariantPtr;
+typedef struct __GdextUninitializedVariant *GDExtensionUninitializedVariantPtr;
+typedef struct __GdextStringName *GDExtensionStringNamePtr;
+typedef const struct __GdextStringName *GDExtensionConstStringNamePtr;
+typedef struct __GdextUninitializedStringName *GDExtensionUninitializedStringNamePtr;
+typedef struct __GdextString *GDExtensionStringPtr;
+typedef const struct __GdextString *GDExtensionConstStringPtr;
+typedef struct __GdextUninitializedString *GDExtensionUninitializedStringPtr;
+typedef struct __GdextObject *GDExtensionObjectPtr;
+typedef const struct __GdextObject *GDExtensionConstObjectPtr;
+typedef struct __GdextUninitializedObject *GDExtensionUninitializedObjectPtr;
+typedef struct __GdextType *GDExtensionTypePtr;
+typedef const struct __GdextType *GDExtensionConstTypePtr;
+typedef struct __GdextUninitializedType *GDExtensionUninitializedTypePtr;
+typedef const struct __GdextMethodBind *GDExtensionMethodBindPtr;
 typedef int64_t GDExtensionInt;
 typedef uint8_t GDExtensionBool;
 typedef uint64_t GDObjectInstanceID;
-typedef void *GDExtensionRefPtr;
-typedef const void *GDExtensionConstRefPtr;
+typedef struct __GdextRef *GDExtensionRefPtr;
+typedef const struct __GdextRef *GDExtensionConstRefPtr;
 
 /* VARIANT DATA I/O */
 
@@ -195,11 +195,11 @@ typedef struct {
 	int32_t expected;
 } GDExtensionCallError;
 
-typedef void (*GDExtensionVariantFromTypeConstructorFunc)(GDExtensionVariantPtr, GDExtensionTypePtr);
-typedef void (*GDExtensionTypeFromVariantConstructorFunc)(GDExtensionTypePtr, GDExtensionVariantPtr);
+typedef void (*GDExtensionVariantFromTypeConstructorFunc)(GDExtensionUninitializedVariantPtr, GDExtensionTypePtr);
+typedef void (*GDExtensionTypeFromVariantConstructorFunc)(GDExtensionUninitializedTypePtr, GDExtensionVariantPtr);
 typedef void (*GDExtensionPtrOperatorEvaluator)(GDExtensionConstTypePtr p_left, GDExtensionConstTypePtr p_right, GDExtensionTypePtr r_result);
 typedef void (*GDExtensionPtrBuiltInMethod)(GDExtensionTypePtr p_base, const GDExtensionConstTypePtr *p_args, GDExtensionTypePtr r_return, int p_argument_count);
-typedef void (*GDExtensionPtrConstructor)(GDExtensionTypePtr p_base, const GDExtensionConstTypePtr *p_args);
+typedef void (*GDExtensionPtrConstructor)(GDExtensionUninitializedTypePtr p_base, const GDExtensionConstTypePtr *p_args);
 typedef void (*GDExtensionPtrDestructor)(GDExtensionTypePtr p_base);
 typedef void (*GDExtensionPtrSetter)(GDExtensionTypePtr p_base, GDExtensionConstTypePtr p_value);
 typedef void (*GDExtensionPtrGetter)(GDExtensionConstTypePtr p_base, GDExtensionTypePtr r_value);
@@ -224,7 +224,7 @@ typedef struct {
 
 /* EXTENSION CLASSES */
 
-typedef void *GDExtensionClassInstancePtr;
+typedef struct __GdextClassInstance *GDExtensionClassInstancePtr;
 
 typedef GDExtensionBool (*GDExtensionClassSet)(GDExtensionClassInstancePtr p_instance, GDExtensionConstStringNamePtr p_name, GDExtensionConstVariantPtr p_value);
 typedef GDExtensionBool (*GDExtensionClassGet)(GDExtensionClassInstancePtr p_instance, GDExtensionConstStringNamePtr p_name, GDExtensionVariantPtr r_ret);
@@ -287,7 +287,7 @@ typedef struct {
 	void *class_userdata; // Per-class user data, later accessible in instance bindings.
 } GDExtensionClassCreationInfo;
 
-typedef void *GDExtensionClassLibraryPtr;
+typedef struct __GdextClassLibrary *GDExtensionClassLibraryPtr;
 
 /* Method */
 
@@ -345,7 +345,7 @@ typedef struct {
 
 /* SCRIPT INSTANCE EXTENSION */
 
-typedef void *GDExtensionScriptInstanceDataPtr; // Pointer to custom ScriptInstance native implementation.
+typedef struct __GdextScriptInstanceData *GDExtensionScriptInstanceDataPtr; // Pointer to custom ScriptInstance native implementation.
 
 typedef GDExtensionBool (*GDExtensionScriptInstanceSet)(GDExtensionScriptInstanceDataPtr p_instance, GDExtensionConstStringNamePtr p_name, GDExtensionConstVariantPtr p_value);
 typedef GDExtensionBool (*GDExtensionScriptInstanceGet)(GDExtensionScriptInstanceDataPtr p_instance, GDExtensionConstStringNamePtr p_name, GDExtensionVariantPtr r_ret);
@@ -375,13 +375,13 @@ typedef GDExtensionBool (*GDExtensionScriptInstanceRefCountDecremented)(GDExtens
 typedef GDExtensionObjectPtr (*GDExtensionScriptInstanceGetScript)(GDExtensionScriptInstanceDataPtr p_instance);
 typedef GDExtensionBool (*GDExtensionScriptInstanceIsPlaceholder)(GDExtensionScriptInstanceDataPtr p_instance);
 
-typedef void *GDExtensionScriptLanguagePtr;
+typedef struct __GdextScriptLanguage *GDExtensionScriptLanguagePtr;
 
 typedef GDExtensionScriptLanguagePtr (*GDExtensionScriptInstanceGetLanguage)(GDExtensionScriptInstanceDataPtr p_instance);
 
 typedef void (*GDExtensionScriptInstanceFree)(GDExtensionScriptInstanceDataPtr p_instance);
 
-typedef void *GDExtensionScriptInstancePtr; // Pointer to ScriptInstance.
+typedef struct __GdextScriptInstance *GDExtensionScriptInstancePtr; // Pointer to ScriptInstance.
 
 typedef struct {
 	GDExtensionScriptInstanceSet set_func;
